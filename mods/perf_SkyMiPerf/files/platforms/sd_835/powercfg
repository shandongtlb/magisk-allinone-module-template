#!/system/bin/sh
# powercfg template by cjybyjk & yc9559
# License: GPL V3

project_name="星空调度"
prj_ver="(prj_ver)"
project_author="星空未来 @ coolapk"
soc_model="sd_835"
generate_date="Thu Feb 21 22:44:28 CST 2019"

is_big_little="true"

DEBUG_FLAG="false"

C0_GOVERNOR_DIR="/sys/devices/system/cpu/cpu0/cpufreq/interactive"
C1_GOVERNOR_DIR="/sys/devices/system/cpu/cpu4/cpufreq/interactive"
C0_CPUFREQ_DIR="/sys/devices/system/cpu/cpu0/cpufreq"
C1_CPUFREQ_DIR="/sys/devices/system/cpu/cpu4/cpufreq"
C0_CORECTL_DIR="/sys/devices/system/cpu/cpu0/core_ctl"
C1_CORECTL_DIR="/sys/devices/system/cpu/cpu4/core_ctl"

if ! $is_big_little ; then
	C0_GOVERNOR_DIR="/sys/devices/system/cpu/cpufreq/interactive"
fi

# $1:timer_rate $2:value
function set_param_little() 
{
	$DEBUG_FLAG && echo "little: set ${1} into ${2}"
	echo ${2} > ${C0_GOVERNOR_DIR}/${1}
}

function set_param_big() 
{
	$DEBUG_FLAG && echo "big: set ${1} into ${2}"
	echo ${2} > ${C1_GOVERNOR_DIR}/${1}
}

function set_param_all() 
{
	set_param_little ${1} "${2}"
	$is_big_little && set_param_big ${1} "${2}"
}

function set_param_HMP()
{
	$DEBUG_FLAG && echo "HMP: set ${1} into ${2}"
	echo ${2} > /proc/sys/kernel/${1}
}

# $1:timer_rate
function print_param() 
{
	if $is_big_little ; then
		print_value "LITTLE: ${1}" ${C0_GOVERNOR_DIR}/${1}
		print_value "big: ${1}" ${C1_GOVERNOR_DIR}/${1}
	else
		print_value "${1}" ${C0_GOVERNOR_DIR}/${1}
	fi
}

function before_modify()
{
	# disable hotplug to switch governor
	set_value 0 /sys/module/msm_thermal/core_control/enabled
	set_value N /sys/module/msm_thermal/parameters/enabled
	# Exynos hotplug
	lock_value 0 /sys/power/cpuhotplug/enabled
	lock_value 0 /sys/devices/system/cpu/cpuhotplug/enabled
	lock_value "interactive" ${C0_CPUFREQ_DIR}/scaling_governor
	chown 0.0 ${C0_GOVERNOR_DIR}/*
	chmod 0666 ${C0_GOVERNOR_DIR}/*
	if $is_big_little ; then
		lock_value "interactive" ${C1_CPUFREQ_DIR}/scaling_governor
		chown 0.0 ${C1_GOVERNOR_DIR}/*
		chmod 0666 ${C1_GOVERNOR_DIR}/*
	fi
	set_param_HMP sched_group_downmigrate 90
	set_param_HMP sched_freq_inc_notify 400000
	set_param_HMP sched_freq_dec_notify 100000
	set_param_HMP sched_spill_nr_run 6
	set_param_HMP sched_spill_load 80
	set_param_HMP sched_restrict_cluster_spill 1
	set_param_HMP sched_prefer_sync_wakee_to_waker 1
	set_param_all boost 0
	set_param_all use_sched_load 1
	set_param_all use_migration_notif 1
	set_param_all boostpulse_duration 18000
	set_param_all ignore_hispeed_on_notif 1
	lock_value 441600 ${C0_CPUFREQ_DIR}/scaling_min_freq
	lock_value 300000 ${C1_CPUFREQ_DIR}/scaling_min_freq
	if [ "balance" = "$mode" ]; then
	    set_param_HMP sched_upmigrate 65
	    set_param_HMP sched_downmigrate 50
	    set_param_HMP sched_group_upmigrate 97
	    set_param_all timer_rate 26666
	    set_param_all timer_slack 18000
	    set_param_all io_is_busy 1
	    set_param_all enable_prediction 0
	    set_param_all sched_boost 1
	    set_param_all input_boost_freq "0:1248000 4:1401600"
	    set_param_all input_boost_ms 60
	    set_value "0-2" /dev/cpuset/background/cpus
	    set_value "0-2" /dev/cpuset/system-background/cpus
	    set_value "0-3,4-7" /dev/cpuset/foreground/boost/cpus
	    set_value "0-3,4-7" /dev/cpuset/foreground/cpus
	elif [ "powersave" = "$mode" ]; then
	    set_param_HMP sched_upmigrate 83
	    set_param_HMP sched_downmigrate 75
	    set_param_HMP sched_group_upmigrate 97
	    set_param_all timer_rate 26666
	    set_param_all timer_slack 18000
	    set_param_all io_is_busy 0
	    set_param_all enable_prediction 0
	    set_param_all sched_boost 0
	    set_param_all input_boost_freq "0:968000 4:900000"
	    set_param_all input_boost_ms 60
	    set_value "0-2" /dev/cpuset/background/cpus
	    set_value "0-2" /dev/cpuset/system-background/cpus
	    set_value "0-3,4-7" /dev/cpuset/foreground/boost/cpus
	    set_value "0-3,4-7" /dev/cpuset/foreground/cpus
	elif [ "performance" = "$mode" ]; then
	    set_param_HMP sched_upmigrate 65
	    set_param_HMP sched_downmigrate 50
	    set_param_HMP sched_group_upmigrate 97
	    set_param_all timer_rate 20000
	    set_param_all timer_slack 18000
	    set_param_all io_is_busy 1
	    set_param_all enable_prediction 0
	    set_param_all sched_boost 0
	    set_param_all input_boost_freq "0:1248000 4:1578000"
	    set_param_all input_boost_ms 40
	    set_value "0-2" /dev/cpuset/background/cpus
	    set_value "0-2" /dev/cpuset/system-background/cpus
	    set_value "0-3,4-7" /dev/cpuset/foreground/boost/cpus
	    set_value "0-3,4-7" /dev/cpuset/foreground/cpus
	fi

}

function after_modify()
{
	chmod 0444 ${C0_GOVERNOR_DIR}/*
	$is_big_little && chmod 0444 ${C1_GOVERNOR_DIR}/*
	# after_modify_params
	verify_param
}

# $1:value $2:file path
function set_value() 
{
	if [ -f $2 ]; then
		$DEBUG_FLAG && echo "set ${2} into ${1}"
		echo $1 > $2
	fi
}

# $1:value $2:file path
function lock_value()
{
	if [ -f $2 ]; then
		# chown 0.0 $2
		chmod 0666 $2
		echo $1 > $2
		chmod 0444 $2
		$DEBUG_FLAG && echo "lock ${2} into ${1}"
	fi                                                  
}

# $1:display-name $2:file path
function print_value() 
{
	if [ -f $2 ]; then
		echo -n "$1: "
		cat $2
	fi
}

function verify_param() 
{
	expected_target=${C0_GOVERNOR_DIR}/target_loads
	if [ "$action" = "powersave" ]; then
		expected_value="50 441800:23 518000:32 678000:44 748000:65 828000:72 968000:77 1178000:88 1248000:90 1328000:95 1401800:97"
	elif [ "$action" = "balance" ]; then
		expected_value="80 441800:32 598000:20 678000:44 748000:35 828000:61 968000:73 1038000:78 1178000:98 1248000:86 1328000:54 1478000:89 1555800:94 1748000:95"
	elif [ "$action" = "performance" ]; then
		expected_value="80 441800:32 598000:20 678000:44 748000:35 828000:61 968000:73 1038000:78 1178000:98 1248000:86 1328000:54 1478000:89 1555800:94 1748000:95"
	elif [ "$action" = "fast" ]; then
		expected_value="(fast_tload)"
	fi
	if [ "`cat ${expected_target}`" = "${expected_value}" ]; then
		echo "${action} OK"
	elif [ "${expected_value}" = "(${action}_tload)" ]; then
		echo "${action} not included"
	else
		echo "${action} FAIL"
	fi
}

function get_mode()
{
    expected_target=${C0_GOVERNOR_DIR}/target_loads
	case "`cat ${expected_target}`" in
		"50 441800:23 518000:32 678000:44 748000:65 828000:72 968000:77 1178000:88 1248000:90 1328000:95 1401800:97" ) echo "powersave OK" ;;
		"80 441800:32 598000:20 678000:44 748000:35 828000:61 968000:73 1038000:78 1178000:98 1248000:86 1328000:54 1478000:89 1555800:94 1748000:95" ) echo "balance OK" ;;
		"80 441800:32 598000:20 678000:44 748000:35 828000:61 968000:73 1038000:78 1178000:98 1248000:86 1328000:54 1478000:89 1555800:94 1748000:95" ) echo "performance OK" ;;
		"(fast_tload)" ) echo "fast OK" ;;
	esac
}

# RunOnce
if [ ! -f /dev/perf_runonce ]; then
	# set flag
	touch /dev/perf_runonce
	
	# HMP_params
	# runonce_params
fi

action=$1
if [ ! -n "$action" ]; then
    action="balance"
fi

# wake up clusters
if $is_big_little; then
	if [ -f "$C0_CORECTL_DIR/min_cpus" ]; then
		C0_CORECTL_MINCPUS=`cat $C0_CORECTL_DIR/min_cpus`
		cat $C0_CORECTL_DIR/max_cpus > $C0_CORECTL_DIR/min_cpus
	fi
	if [ -f "$C1_CORECTL_DIR/min_cpus" ]; then
		C1_CORECTL_MINCPUS=`cat $C1_CORECTL_DIR/min_cpus`
		cat $C1_CORECTL_DIR/max_cpus > $C1_CORECTL_DIR/min_cpus
	fi
	set_value 1 /sys/devices/system/cpu/cpu0/online
	set_value 1 /sys/devices/system/cpu/cpu4/online
fi

if [ "$action" = "debug" ]; then
	echo "$project_name"
	echo "Version: $prj_ver"
	echo "Author: $project_author"
	echo "Platform: $soc_model"
	echo "Generated at $generate_date"
	echo ""
	print_param above_hispeed_delay
	print_param target_loads
	get_mode
else
	before_modify
	if [ "$action" = "powersave" ]; then
		echo "applying powersave"
		set_param_little above_hispeed_delay "18000 968000:68000 1178000:18000 1248000:68000 1401800:118000"
		set_param_little go_hispeed_load 97
		set_param_little hispeed_freq 960000
		set_param_little target_loads "50 441800:23 518000:32 678000:44 748000:65 828000:72 968000:77 1178000:88 1248000:90 1328000:95 1401800:97"
		set_param_little min_sample_time 18000
		set_param_little max_freq_hysteresis 79000
		set_param_big above_hispeed_delay "18000 908000:58000 1058000:58000 1268000:108000 1428000:128000"
		set_param_big go_hispeed_load 95
		set_param_big hispeed_freq 1058000
		set_param_big target_loads "80 348000:91 498000:40 578000:50 658000:60 728000:70 978000:75 1058000:93 1198000:66 1268000:77 1348000:96 1428000:90 1580000:99"
		set_param_big min_sample_time 18000
		set_param_big max_freq_hysteresis 79000

	elif [ "$action" = "balance" ]; then
		echo "applying balance"
		set_param_little above_hispeed_delay "18000 1328000:58000 1401800:18000 1555800:58000 1748000:98000"
		set_param_little go_hispeed_load 75
		set_param_little hispeed_freq 1178000
		set_param_little target_loads "80 441800:32 598000:20 678000:44 748000:35 828000:61 968000:73 1038000:78 1178000:98 1248000:86 1328000:54 1478000:89 1555800:94 1748000:95"
		set_param_little min_sample_time 18000
		set_param_little max_freq_hysteresis 58000
		set_param_little scaling_min_freq 441600
		set_param_big above_hispeed_delay "18000 1268000:58000 1480000:18000 1728000:58000 1958000:118000"
		set_param_big go_hispeed_load 83
		set_param_big hispeed_freq 1328000
		set_param_big target_loads "80 441800:35 578000:52 658000:65 728000:82 808000:93 1058000:70 1268000:97 1658000:88 1958000:99"
		set_param_big min_sample_time 18000
		set_param_big max_freq_hysteresis 58000
		set_param_big scaling_min_freq 300000

	elif [ "$action" = "performance" ]; then
		echo "applying performance"
		set_param_little above_hispeed_delay "18000 1328000:48000 1558000:18000 1748000:88000 1828000:38000"
		set_param_little go_hispeed_load 80
		set_param_little hispeed_freq 1178000
		set_param_little target_loads "80 441800:32 598000:20 678000:44 748000:35 828000:61 968000:73 1038000:78 1178000:98 1248000:86 1328000:54 1478000:89 1555800:94 1748000:95"
		set_param_little min_sample_time 18000
		set_param_little max_freq_hysteresis 48000
		set_param_big above_hispeed_delay "18000 1348000:48000 1578000:18000 1728000:48000 1958000:58000 2268000:48000"
		set_param_big go_hispeed_load 60
		set_param_big hispeed_freq 1328000
		set_param_big target_loads "80 441800:44 578000:15 658000:55 728000:60 808000:55 978000:60 1058000:70 1138000:88 1348000:90 1428000:30 1658000:93 1728000:95 1958000:97"
		set_param_big min_sample_time 18000
		set_param_big max_freq_hysteresis 48000

	elif [ "$action" = "fast" ]; then
		echo "applying fast"
		:
	fi
	after_modify
fi

if $is_big_little; then
	set_value $C0_CORECTL_MINCPUS $C0_CORECTL_DIR/min_cpus
	set_value $C1_CORECTL_MINCPUS $C1_CORECTL_DIR/min_cpus
fi

exit 0
